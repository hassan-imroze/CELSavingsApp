@{
    ViewBag.Title = "Account Holder Dashboard";
}

<h2>Account Holder Dashboard</h2>


<div class="row">
    <div class="col">
        <div class="row" style="margin-top:20px;">
            <div class="col">
                <h4>Account Balance:</h4>
            </div>
        </div>
        <hr />
        <div class="row">
            <table id="tblSavingsAccounts" class="table table-bordered table-hover">
                <thead class="thead-light">
                </thead>
                <tbody></tbody>
                <tfoot class="thead-light">
                    <tr>
                        <th colspan="3" style="text-align:left !important">Total:</th>
                        <th></th>
                    </tr>
                </tfoot>
            </table>
        </div>

    </div>
    <div class="col">
        <div class="row" style="margin-top:20px;">
            <div class="col">
                <h4>Payment Summary:</h4>
            </div>
            <div class="col text-right">
                <a class='btn btn-primary' href='/Payments' target='_blank'>View Detail</a>
            </div>
        </div>

        <hr />
        <div class="row">

            <table id="tblPaymentSummary" class="table table-bordered table-hover">
                <thead class="thead-light">
                </thead>
                <tbody></tbody>
                <tfoot class="thead-light">
                    <tr>
                        <th colspan="2" style="text-align:left !important">Total:</th>
                        <th></th>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
</div>



@section scripts
{
    @Scripts.Render("~/bundles/datatables");
    <script>
        $(document).ready(function () {
            var table = $("#tblSavingsAccounts").DataTable({
                paging: false,
                info: false,
                searching: false,
                ajax: {
                    url: "/api/savingaccounts/byEmailAddress/@ViewData["UserEmail"]/",
                    method: "GET",
                    dataSrc: ""
                },

                columns: [
                    {
                        data: "accountNo",
                        title: "AccountNo."
                    },
                    {
                        data: "name",
                        title: "Name"
                    },
                    {
                        data: "id",
                        className: "text-center",
                        title: "Statement",
                        render: function (data, type, obj) {
                            return "<a class='btn btn-secondary btn-sm btn-block' href='/transactions/accountStatement/" + data + "' target='_blank'>View</a>";
                        }
                    },
                    {
                        data: "balance",
                        className: "text-right",
                        render: $.fn.dataTable.render.number(',', '.', 4, ''),
                        title: "Balance"
                    }

                ],
                footerCallback: function (row, data, start, end, display) {
                    var api = this.api(), data;

                    // Remove the formatting to get integer data for summation
                    var intVal = function (i) {
                        return typeof i === 'string' ?
                            i.replace(/[\$,]/g, '') * 1 :
                            typeof i === 'number' ?
                                i : 0;
                    };

                    // Total over all pages
                    total = api
                        .column(3)
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);

                    // Total over this page
                    //pageTotal = api
                    //    .column(4, { page: 'current' })
                    //    .data()
                    //    .reduce(function (a, b) {
                    //        return intVal(a) + intVal(b);
                    //    }, 0);

                    // Update footer
                    $(api.column(3).footer()).html(
                        total.toLocaleString()
                    );
                }
                //{
                //    data: "id",
                //    title: "Delete",
                //    render: function (data, type, movie) {
                //        return "<button data-movie-id='" + data + "' data-movie-name='" + movie.name + "' class='btn btn-sm btn-danger js-delete'>Delete</button>";
                //    }
                //}

            });

            var table = $("#tblPaymentSummary").DataTable({
                ajax: {
                    url: "/api/payments/summary/@ViewData["UserEmail"]/",
                    method: "GET",
                    dataSrc: ""
                },
                paging: false,
                info: false,
                searching: false,
                columns: [
                    {
                        data: "accountNo",
                        title: "AccountNo."
                    },
                    {
                        data: "name",
                        title: "Name"
                    },
                    {
                        data: "paymentAmount",
                        className: "text-right",
                        render: $.fn.dataTable.render.number(',', '.', 4, ''),
                        title: "Amount"
                    }
                ],
                footerCallback: function (row, data, start, end, display) {
                    var api = this.api(), data;

                    // Remove the formatting to get integer data for summation
                    var intVal = function (i) {
                        return typeof i === 'string' ?
                            i.replace(/[\$,]/g, '') * 1 :
                            typeof i === 'number' ?
                                i : 0;
                    };

                    // Total over all pages
                    total = api
                        .column(2)
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);

                    // Total over this page
                    //pageTotal = api
                    //    .column(4, { page: 'current' })
                    //    .data()
                    //    .reduce(function (a, b) {
                    //        return intVal(a) + intVal(b);
                    //    }, 0);

                    // Update footer
                    $(api.column(2).footer()).html(
                        total.toLocaleString()
                    );
                }

                //{
                //    data: "id",
                //    title: "Delete",
                //    render: function (data, type, movie) {
                //        return "<button data-movie-id='" + data + "' data-movie-name='" + movie.name + "' class='btn btn-sm btn-danger js-delete'>Delete</button>";
                //    }
                //}

            });
            //$("#tblSavingsAccounts").on("click", ".js-delete", function () {
            //    var button = $(this);
            //    console.log(button.attr("data-movie-id"));

            //    bootbox.confirm({
            //        title: "Delete Movie ?",
            //        message: "Sure you want to delete this movie with name: <b>'" + button.attr("data-movie-name") + "'</b> ?",
            //        closeButton: false,
            //        backdrop: true,
            //        callback: function (result) {
            //            console.log(result);
            //            if (result) {
            //                $.ajax({
            //                    url: "/api/movies/" + button.attr("data-movie-id"),
            //                    method: "DELETE",
            //                    success: function () {
            //                        table.row(button.parents("tr")).remove().draw();
            //                    }
            //                });
            //            }
            //        }
            //    });
            //});
        });
    </script>
}

